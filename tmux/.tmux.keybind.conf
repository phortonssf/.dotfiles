unbind C-b
unbind -T copy-mode-vi Enter

# set-option -g prefix C-a

# bind p paste-buffer
# bind -T copy-mode  C-c send -X copy-pipe-no-clear "xsel -i --clipboard"
# bind -T copy-mode-vi C-c send -X copy-pipe-no-clear "xsel -i --clipboard"
bind-key -T copy-mode-vi v send-keys -X begin-selection
# bind-key -r C-j previous-window
# bind-key -r C-k next-window
# easy reload config
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded."
# bind-key -r i run-shell "tmux neww ~/.local/bin/tmux-cht.sh"

# bind -r i run-shell "tmux neww ~/.local/bin/tmux-ch.sh"
bind-key y respawn-window
# bind-key c-a send prefix \; display "sync #{?synchronize-panes,on,off}"

# send commands to all panes
# bind c-j  display "Sync #{?synchronize-panes,ON,OFF}"


# last session
bind -r k select-pane -U
# vim-like pane switching
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

 
 bind -n C-x setw synchronize-panes
 # toggle status bar

# previous window
bind ^ last-window

bind  -r C-j select-window -t 1
bind  -r C-k select-window -t 2
# bind -r K run tmux ls | awk 'BEGIN{FS=":"}!/attached/{print $1}' | xargs -n 1 tmux kill-ses -t
# Killsessions
bind -r K run-shell "tmux list-sessions | grep -v attached | awk 'BEGIN{FS=":"}{print $1}' | xargs -n 1 tmux kill-session -t "
bind -r o neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/.dotfiles/todo.md"
bind D run-shell '~/.local/bin/tmux-sessionizer ~/.dotfiles'
# bind K run-shell 't ~/projects/aws-sdk '
bind m run-shell 'tmux switch-client -t main'
bind g run-shell '~/.local/bin/tmux-sessionizer ~/work/galley/devops/terraform/EKS'
# Toggle popup window with Alt-3
# bind-key -N 'Toggle popup window' S-F1 if-shell -F '#{==:#{session_name},popup}' {
#     detach-client
# } {
#     display-popup -d "#{pane_current_path}" -xC -yC -w 80% -h 75% -E 'tmux attach-session -t popup || tmux new-session -s popup'
# }
# don't display status if only 1 window
# if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"
# set-hook -g window-linked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
# set-hook -g window-unlinked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
# -- needs this to work below
set -g prefix None


is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"



#switch-session after bindkey double press
bind-key C-a switch-client -l \;\
   run-shell -b -d 3 'tmux set status off'
bind -n C-a set status on \;\
   switch-client -T prefix \;\
   # run-shell 'tmux set -g status on && sleep 5 && tmux set -g status off';
    # run-shell -d 0.2 -b "while [ $(tmux display-message -p '##{client_prefix}') -eq 1 ]; do sleep 0.2 ; done; sleep 4.0; tmux set status off";
# set-hook -g client-active 'set -g status on'
  set-hook -g client-focus-in "run-shell 'tmux set -g status on && sleep 5 && tmux set -g status off '"
# set-hook -g client-focus-out 'set -g status off'
#
#Ensure status is on when we lose focus
set-hook -g client-focus-out 'set -g status on'
bind-key -n F3 run-shell 'tmux set status'
bind-key "T" run-shell "sesh connect \"$(
	sesh list | fzf-tmux -p 55%,60% \
		--no-sort --border-label ' sesh ' --prompt '‚ö°  ' \
		--header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
		--bind 'tab:down,btab:up' \
		--bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list)' \
		--bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t)' \
		--bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c)' \
		--bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z)' \
		--bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
		--bind 'ctrl-d:execute(tmux kill-session -t {})+change-prompt(‚ö°  )+reload(sesh list)'
)\""

