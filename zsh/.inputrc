#$include /etc/inputrc
#"\C-p":history-search-backward
#"\C-n":history-search-forward

set colored-stats On
set completion-ignore-case On
set completion-prefix-display-length 3
set mark-symlinked-directories On
set show-all-if-ambiguous On
set show-all-if-unmodified On
set visible-stats On
bindkey -M viins 'kk' vi-cmd-mode
bindkey -M viins 'jj' vi-cmd-mode
# For History searching
bindkey "^R" history-incremental-search-backward
bindkey "\e[A" history-beginning-search-backward
bindkey "\e[B" history-beginning-search-forward
bindkey '^ ' autosuggest-accept
bindkey -r '^R'
bindkey -r '^S'
bindkey -r '^J'
# bindkey -r vicmd ':'
#
# Vi Mode
set editing-mode vi
 
#$if mode=vi
#  set keymap vi-command
#  "gg": beginning-of-history
#  "G": end-of-history
#  set keymap vi-insert
#  "\C-w": backward-kill-word
#  "\C-p": history-search-backward
#$endif
#set keymap vi-command
#Control-l: clear-screen
#set keymap vi-insert
#Control-l: clear-screen
#set vi-ins-mode-string '\1\e[6 q\2'
#set vi-cmd-mode-string \1\e[2 q\2

# Fix backspace bug when switching modes
bindkey "^?" backward-delete-char

set show-mode-in-prompt on
set vi-cmd-mode-string "\1\e[1 q\2"
set vi-ins-mode-string "\1\e[5 q\2"

# Use vim keys in tab complete menu:
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'j' vi-down-line-or-history
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'left' vi-backward-char
bindkey -M menuselect 'down' vi-down-line-or-history
bindkey -M menuselect 'up' vi-up-line-or-history
bindkey -M menuselect 'right' vi-forward-char

# Change cursor shape for different vi modes.
#function zle-keymap-select {
#  if [[ ${KEYMAP} == vicmd ]] ||
#     [[ $1 = 'block' ]]; then
#    echo -ne '\e[1 q'
#  elif [[ ${KEYMAP} == main ]] ||
#       [[ ${KEYMAP} == viins ]] ||
#       [[ ${KEYMAP} = '' ]] ||
#       [[ $1 = 'beam' ]]; then
#    echo -ne '\e[5 q'
#  fi
#}
#zle -N zle-keymap-select
#
#
#echo -ne '\e[5 q'
#
#    # Use beam shape cursor for each new prompt.
#preexec() {
#echo -ne '\e[5 q'
#}
