#!/usr/bin/env bash
if [ -z "$TMUX" ]; then
  # if existing session
  if  tmux list-sessions >/dev/null 2>&1; then
    SESSIONEXISTS=$(tmux list-sessions)
    # 2. Create the session if it doesn't exists.
    if [ -z $SESSIONEXISTS ]; then
      selected=$(find  ~/projects ~/ ~/work   -mindepth 1 -maxdepth 1 -type d | fzf-tmux)
      if [ -z $selected ]; then
        selected_name="main"
        tmux display-message "starting main session"
        return
      else
        selected_name=$(basename "$selected" | tr . _)
        return
      fi
      TMUX= tmux new-session -As $selected_name -c $selected
      return
    else
      LAST_TMUX_SESSION=$(tmux list-sessions | awk -F ":" '{print$1}' | tail -n1);
      tmux attach -t $LAST_TMUX_SESSION
      return
    fi
  fi
else
  command
fi
current_session=`tmux display-message -p '#S'`
export STARTED=false
if [[ $# -eq 1 ]]; then
    selected=$1
  else
    selected=$(find  ~/projects ~/ ~/work   -mindepth 1 -maxdepth 1 -type d | fzf-tmux)
fi


# if already in session trying to switch too
if [[ $current_session = $selected_name ]]; then
     tmux display-message "Already in ${selected_name}"
     return
fi

# if no selection passed start a main session
if [[ -z $selected ]]; then
    selected_name='main'
fi

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)
if ! tmux has-session -t=$selected_name 2> /dev/null; then
  TMUX= tmux new-session -s $selected_name -c $selected -d
  tmux send-keys -t $selected_name "nvim " Enter
  tmux neww -t $selected_name:2 -c $selected -n zsh
fi

# if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
  # tmux new-session -s $selected_name -c $selected
  # exit 0
# fi
if [ -z "$TMUX" ]; then
  SESSIONEXISTS=$(tmux list-sessions)
  # 2. Create the session if it doesn't exists.
  if [ -z $SESSIONEXISTS ]; then
    selected=$(find  ~/projects ~/ ~/work   -mindepth 1 -maxdepth 1 -type d | fzf-tmux)
    if [ -z $selected ]; then
      selected_name="main"
      tmux display-message "starting main session"
    else
      selected_name=$(basename "$selected" | tr . _)
    fi
     TMUX= tmux new-session -As $selected_name -c $selected
  else
    LAST_TMUX_SESSION=$(tmux list-sessions | awk -F ":" '{print$1}' | tail -n1);
    tmux attach -t $LAST_TMUX_SESSION
  fi
fi

tmux switch-client -t $selected_name:1



























# if [ $# -eq 1 ]; then
#     selected=$1
#     selected_name=$(basename "$selected" | tr . _)
# fi
# if [ -z $selected ] || [ "$TMUX_SESSION" = "$selected_name" ]; then
#     tmux new-session -s main
#     tmux attach-session -t main -c ~
#     exit 0
# fi
# tmux_running=$(pgrep tmux)
# # New session

# if ! tmux has-session -t $selected_name 2> /dev/null; then
#   tmux new-session -ds $selected_name -c $selected -n $selected_name
#   tmux send-keys -t $selected_name "nvim -S" Enter
#   tmux neww -t $selected_name:2 -c $selected -n zsh
#   tmux switch-client -t $selected_name
#   exit 0
# fi

# ---------------------------------------
#https://gist.github.com/jyurek/7be666a88e06f68d45cf
##!/bin/zsh
#WORKING_DIRECTORY=$(cdpath=(. ~/code) cd $1 > /dev/null 2>&1 && pwd)
#if [ -z "$TMUX" ]; then
#  # not in tmux
#  if [ -n "$WORKING_DIRECTORY" ]; then
#    tmux new-session -As $1 -c $WORKING_DIRECTORY
#  else
#    tmux new-session -As $1 -c $HOME
#  fi
#else
#  # inside tmux
#  if tmux has-session -t $1 2> /dev/null; then
#    tmux switch-client -t $1
#  else
#    if [ -n "$WORKING_DIRECTORY" ]; then
#      TMUX= tmux new-session -ds $1 -c $WORKING_DIRECTORY
#    else
#      TMUX= tmux new-session -ds $1
#    fi
#    tmux switch-client -t $1
#  fi
#fi

# ------------------------------------------------------------
